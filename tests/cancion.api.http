
### 3. POST /api/book
# Este endpoint debe permitir crear un nuevo libro en el sistema.
# Se espera una respuesta con el libro creado, incluyendo el ID generado.

POST http://127.0.0.1:3003/canciones/cancion
Content-Type: application/json

{
    "cancion":{
		"id": "003",
		"titulo": "El señor de los anillos - Soundtrack",
		"autor": "Perón",
		"anioLanzamiento": "1920"
    }
}
###

### 4. GET /api/book/b72f94f2-bc09-49e4-85a6-83fd7eaa29c0
# Este endpoint debe retornar un libro específico por su ID.
# Se espera un objeto JSON representando el libro correspondiente.

GET http://127.0.0.1:3003/canciones/cancion-valid/001
Content-Type: application/json

###

### 5. PUT /api/book/b72f94f2-bc09-49e4-85a6-83fd7eaa29c0
# Este endpoint debe actualizar los datos del libro con el ID especificado.
# Se espera una respuesta con el libro actualizado.

PUT http://127.0.0.1:3003/canciones/update-anioLanzamiento/
Content-Type: application/json

{
  "autor": "Anderson",
  "anioLanzamiento": "2029"
}

###

### 6. DELETE /api/book/b72f94f2-bc09-49e4-85a6-83fd7eaa29c0
# Este endpoint debe eliminar el libro con el ID especificado.
# Se espera un mensaje de éxito: {"message": "Libro eliminado correctamente"}

DELETE http://127.0.0.1:3003/canciones/cancion/001
Content-Type: application/json